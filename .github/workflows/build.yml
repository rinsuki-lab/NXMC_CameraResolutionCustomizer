name: Build
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  determine_version:
    runs-on: ubuntu-24.04
    outputs:
      full_version: ${{ steps.version.outputs.full_version }}
    steps:
    - uses: actions/checkout@v4
    - name: Determine version
      id: version
      run: |
        BASE_VERSION=$(grep -Po '(?<=<Version>)[^<]+' NXMC_CameraResolutionCustomizer.csproj)
        TIMESTAMP=$(date +%Y%m%d%H%M%S)
        FULL_VERSION="${BASE_VERSION}.${TIMESTAMP}"
        echo "full_version=${FULL_VERSION}" >> $GITHUB_OUTPUT
  build_bepinex:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
    - uses: actions/checkout@v4
      with:
        repository: BepInEx/BepInEx
        ref: 53625800b86f6c68751445248260edf0b27a71c2 # v6.0.0-pre.2
        path: BepInEx
    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6.0.x
    - run: find ../bepinex-patches -type f -name "*.patch" -exec bash -c "patch -p1 < {}" \;
      working-directory: BepInEx
    - run: ./build.sh --target Publish
      working-directory: BepInEx
    - uses: actions/upload-artifact@v4
      with:
          path: "./BepInEx/bin/dist/*.zip"
          name: "BepInEx_CI"
          if-no-files-found: error
  build_plugin:
    runs-on: windows-2025
    needs: determine_version
    steps:
    - uses: actions/checkout@v4
    - name: Update csproj version
      shell: pwsh
      run: |
        $content = Get-Content NXMC_CameraResolutionCustomizer.csproj -Raw
        $content = $content -replace '<Version>[^<]+</Version>', '<Version>${{ needs.determine_version.outputs.full_version }}</Version>'
        Set-Content -Path NXMC_CameraResolutionCustomizer.csproj -Value $content -NoNewline
    - run: dotnet build --configuration Release
    - uses: actions/upload-artifact@v4
      with:
        path: "./bin/Release/net48/NXMC_CameraResolutionCustomizer.dll"
        name: "NXMC_CameraResolutionCustomizer_CI"
        if-no-files-found: error
  build_zip:
    runs-on: windows-2025
    needs: [determine_version, build_bepinex, build_plugin]
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
      with:
        name: "BepInEx_CI"
    - uses: actions/download-artifact@v4
      with:
        name: "NXMC_CameraResolutionCustomizer_CI"
    - uses: ilammy/msvc-dev-cmd@0b201ec74fa43914dc39ae48a89fd1d8cb592756 # 1.13.0
    - shell: bash
      run: |
        mkdir -p dist
        mv BepInEx-NET.Framework-net48-win-x64-*.zip BepInEx.zip
        unzip -o BepInEx.zip -d dist
        chmod -R 755 dist
        cp -r overlay/* dist/
        cp NXMC_CameraResolutionCustomizer.dll dist/BepInEx/plugins/
        mt.exe -manifest BepInEx.NET.Framework.Launcher.exe.manifest -outputresource:"dist/BepInEx.NET.Framework.Launcher.exe;1"
    - run: Compress-Archive -Path * -DestinationPath ../NXMC_CameraResolutionCustomizer_${{ needs.determine_version.outputs.full_version }}.zip -CompressionLevel Optimal
      shell: pwsh
      working-directory: dist
    - uses: actions/upload-artifact@v4
      with:
        path: "./NXMC_CameraResolutionCustomizer_${{ needs.determine_version.outputs.full_version }}.zip"
        name: "NXMC_CameraResolutionCustomizer_zip"
        if-no-files-found: error
  create_draft_release:
    runs-on: ubuntu-24.04
    needs: [determine_version, build_zip]
    if: github.event_name == 'workflow_dispatch'
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
      with:
        name: "NXMC_CameraResolutionCustomizer_zip"
    - name: Create Draft Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        VERSION="v${{ needs.determine_version.outputs.full_version }}"
        gh release create "$VERSION" \
          --draft \
          --title "$VERSION" \
          --notes "Draft release created by workflow_dispatch" \
          NXMC_CameraResolutionCustomizer_${{ needs.determine_version.outputs.full_version }}.zip
